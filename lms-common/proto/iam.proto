syntax = "proto3";

package iam;


// define the user service
service UserService {
  rpc CreateUser (CreateUserDto) returns (User) {}
  rpc FindAllUsers (Empty) returns (Users) {}
  rpc FindOneUser (FindOneUserDto) returns (User) {}
  rpc FindOneUserByUsername (FindOneUserByUserNameDto) returns (User) {}
  rpc UpdateUser (UpdateUserDto) returns (User) {}
  rpc RemoveUser (FindOneUserDto) returns (User) {}
  rpc QueryUsers (stream PaginationDto) returns (stream Users) {}
}

message PaginationDto {
  int32 page = 1;
  int32 skip = 2;
}
// define the objects needed for the services
message Empty {}

message Users {
  repeated User users = 1;
}

message FindOneUserDto {
  string id = 1;
}

message FindOneUserByUserNameDto {
  string username = 1;
}

message UpdateUserDto {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string username = 4;
  string email = 5;
  string password_hash = 6;
  string date_of_birth = 7;
  string profile_image = 8;
}

message CreateUserDto {
  string username = 1;
  string email = 2;
  string password_hash = 3;
  string first_name = 4;
  string last_name = 5;
  enum user_type {
    ADMIN = 0;
    STUDENT = 1;
    TEACHER = 2;
  }
  user_type type = 6;
  string date_of_birth = 7;
  optional string profile_image = 8;
}

message User {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string username = 4;
  string email = 5;
  string password_hash = 6;
  enum user_type {
    ADMIN = 0;
    STUDENT = 1;
    TEACHER = 2;
  }
  user_type type = 7;
  string date_of_birth = 8;
  optional string profile_image = 9;
}